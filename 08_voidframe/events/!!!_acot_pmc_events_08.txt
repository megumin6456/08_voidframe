namespace = acot_pmc
# Cooldown time before we can raid again
@vault_delay = 720
# On Taking the Vault
country_event = {
	id = acot_pmc.11
	title = "acot_pmc.11.title"
	desc = {
		trigger = {
			NOR = {
				has_country_flag = acot_first_time_vault_capture
				giga_has_frameworld_origin = yes
			}
		}
		text = "acot_pmc.11.desc.a"
	}
	desc = {
		trigger = {
			has_country_flag = acot_first_time_vault_capture
			NOT = { giga_has_frameworld_origin = yes }
		}
		text = "acot_pmc.11.desc.b"
	}
	desc = {
		trigger = {
			giga_has_frameworld_origin = yes
		}
		text = acot_pmc.11.desc.voidframe
	}
	show_sound = event_mystery
	picture = GFX_evt_star_chart
	is_triggered_only = yes
	trigger = {
		fromfrom = {
			is_planet_class = pc_acot_pmc_vault
		}
	}
	immediate = {
		if = {
			limit = { has_global_flag = has_aot_mod }
			create_protecc_country = yes
		}
		FROMFROM = {
			every_owned_pop = {
				limit = {
					species = {
						is_same_value = event_target:phanon_species
					}
				}
				kill_pop = yes
			}
			set_owner = root
			set_controller = root
			set_planet_flag = under_assault
			set_planet_flag = under_assault_by@root
			if = {
				limit = { # do not spawn pops if frameworld (let it decolonize)
					root = { giga_has_frameworld_origin = yes }
				}
				root = { set_country_flag = has_vault_within_borders }
			} else = {
				while = {
					count = 5
					create_pop = {
						species = owner_main_species
					}
				}
			}
			IF = {
				limit = {
					NOT = {
						has_planet_flag = acot_vault_overtaken
					}
				}
				set_planet_flag = acot_vault_overtaken
				if = {
					limit = {
						NOT = { is_planet_class = pc_giga_frameworld }
					}
					set_planet_size = 10
				}
			}
		}
	}
	option = {
		name = acot_pmc.11.a
		trigger = {
			NOT = {
				has_country_flag = acot_first_time_vault_capture
			}
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_1
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_1
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_2
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_2
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_3
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_3
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = acot_first_time_vault_capture
				}
			}
			set_country_flag = acot_first_time_vault_capture
		}
	}
	option = {
		name = acot_pmc.11.b
		trigger = {
			has_country_flag = acot_first_time_vault_capture
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_1
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_1
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_2
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_2
		}
		IF = {
			limit = {
				NOT = {
					has_technology = tech_precursor_phanon_design_pe_3
				}
			}
			add_research_option = tech_precursor_phanon_design_pe_3
		}
	}
}

# Vault Invasion Victory - Phase One
country_event = {
	id = acot_pmc.1200
	title = "acot_pmc.1200.title"
	desc = {
		text = acot_pmc.1200.desc.a
	}
	show_sound = event_ground_battle
	picture = GFX_evt_sentry_guns
	is_triggered_only = yes
	trigger = {
		is_playable_country = yes
		fromfrom = {
			OR = {
				is_planet_class = pc_acot_pmc_vault
				AND = {
					is_planet_class = pc_giga_frameworld
					root = {
						giga_has_frameworld_origin = yes
						has_country_flag = has_vault_within_borders
					}
				}
			}
			has_planet_flag = ongoing_vault_infiltration
		}
		NOT = {
			has_country_flag = acot_phanon_tech_stage_one_enabled
		}
	}
	immediate = {
		FROMFROM = {
			remove_planet_flag = ongoing_vault_infiltration
			add_planet_devastation = -100
			add_modifier = {
				modifier = acot_modifier_vault_delay
				days = @vault_delay
			}
			IF = {
				limit = {
					has_modifier = acot_vault_good_cover_buff_25
				}
				remove_modifier = acot_vault_good_cover_buff_25
			}
			IF = {
				limit = {
					has_modifier = acot_vault_psi_gas_debuff
				}
				remove_modifier = acot_vault_psi_gas_debuff
			}
		}
		if = {
			limit = { has_global_flag = has_aot_mod }
			event_target:phanon_protecc_base_country = {
				IF = {
					limit = {
						has_modifier = acot_vault_exposed_debuff_25
					}
					remove_modifier = acot_vault_exposed_debuff_25
				}
				IF = {
					limit = {
						has_modifier = acot_vault_psi_gas_debuff
					}
					remove_modifier = acot_vault_psi_gas_debuff
				}
			}
		} else = {
			event_target:phanon_base_country = {
				IF = {
					limit = {
						has_modifier = acot_vault_exposed_debuff_25
					}
					remove_modifier = acot_vault_exposed_debuff_25
				}
				IF = {
					limit = {
						has_modifier = acot_vault_psi_gas_debuff
					}
					remove_modifier = acot_vault_psi_gas_debuff
				}
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = acot_phanon_tech_enabled
				}
			}
			set_country_flag = acot_phanon_tech_enabled
		}
	}
	option = {
		name = acot_pmc.1200.a
		FROMFROM = {
			if = {
				limit = {
					NOT = { is_planet_class = pc_giga_frameworld }
				}
				set_planet_size = 15
			}
			set_planet_flag = acot_vault_floor_one_cleared
		}		
		if = {
			limit = { has_global_flag = has_aot_mod }
			phanon_type_a_tech_gift = yes
		} else_if = {
			limit = {
				NOT = { has_technology = tech_dark_matter_power_core_re }
			}
			add_research_option = tech_dark_matter_power_core_re
		}
		set_country_flag = acot_phanon_tech_stage_one_enabled
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = acot_phanon_event_chain
				counter = phanon_vault_stage
				amount = 1
			}
		}
	}
}

# Vault Invasion Commencing - Phase Two
planet_event = {
	id = acot_pmc.13
	title = "acot_pmc.13.title"
	desc = "acot_pmc.13.desc"
	show_sound = event_mystery
	picture = GFX_evt_sentry_guns
	is_triggered_only = yes
	trigger = {
	}
	immediate = {
	}
	option = {
		name = acot_pmc.13.a
		custom_tooltip = acot_pmc.13.a.tooltip
		hidden_effect = {
			if = {
				limit = { has_global_flag = has_aot_mod }
				while = {
					count = 60
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			} else = {
				while = {
					count = 60
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			}
			#### AUTOMATED DEFENSES
			while = {
				count = 10
				create_army = {
					owner = root
					type = acot_phanon_defense_turret
					species = owner_main_species
					land_army = yes
				}
			}
			while = {
				count = 5
				create_army = {
					owner = root
					type = acot_phanon_defense_trap
					species = owner_main_species
					land_army = yes
				}
			}
		}
	}
	option = {
		name = acot_pmc.13.b
		custom_tooltip = acot_pmc.13.b.tooltip
		allow = {
			NOT = { owner = { giga_has_frameworld_origin = yes } }
		}
		hidden_effect = {
			if = {
				limit = { has_global_flag = has_aot_mod }
				while = {
					count = 60
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			} else = {
				while = {
					count = 60
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 20
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			}
			#### AUTOMATED DEFENSES
			while = {
				count = 10
				create_army = {
					owner = root
					type = acot_phanon_defense_turret
					species = owner_main_species
					land_army = yes
				}
			}
			while = {
				count = 5
				create_army = {
					owner = root
					type = acot_phanon_defense_trap
					species = owner_main_species
					land_army = yes
				}
			}
			#### XENOMORPH ARMY
			while = {
				count = 80
				create_army = {
					owner = root
					type = acot_phanon_defense_xenomorph
					species = owner_main_species
					land_army = yes
				}
			}
			planet_event = {
				id = acot_pmc.1301 days = 360
			}
		}
	}
	option = {
		name = acot_pmc.13.c
		hidden_effect = {
			if = {
				limit = { has_global_flag = has_aot_mod }
				while = {
					count = 80
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 30
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_protecc_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			} else = {
				while = {
					count = 80
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 30
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_shielder
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 10
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commando
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
				while = {
					count = 1
					create_army = {
						owner = event_target:phanon_base_country
						type = acot_phanon_defense_droid_commander
						species = event_target:phanon_operative_species
						land_army = yes
					}
				}
			}
		}
	}
	option = {
		name = acot_pmc.13.d
		hidden_effect = {
			remove_modifier = acot_modifier_vault_delay
			remove_planet_flag = ongoing_vault_infiltration
		}
	}
}

# Vault Invasion Victory - Phase Two
country_event = {
	id = acot_pmc.1300
	title = "acot_pmc.1300.title"
	desc = {
		text = acot_pmc.1300.desc.a
	}
	show_sound = event_ground_battle
	picture = GFX_evt_sentry_guns
	is_triggered_only = yes
	trigger = {
		is_playable_country = yes
		fromfrom = {
			OR = {
				is_planet_class = pc_acot_pmc_vault
				AND = {
					is_planet_class = pc_giga_frameworld
					root = {
						giga_has_frameworld_origin = yes
						has_country_flag = has_vault_within_borders
					}
				}
			}
			has_planet_flag = ongoing_vault_infiltration
		}
		NOT = {
			has_country_flag = acot_phanon_tech_stage_two_enabled
		}
	}

	immediate = {
		FROMFROM = {
			remove_planet_flag = ongoing_vault_infiltration
			set_planet_flag = acot_vault_floor_two_cleared
			add_planet_devastation = -100
			add_modifier = {
				modifier = acot_modifier_vault_delay
				days = @vault_delay
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = acot_phanon_tech_enabled
				}
			}
			set_country_flag = acot_phanon_tech_enabled
		}
	}
	
	option = {
		name = acot_pmc.1300.a
		FROMFROM = {
			if = {
				limit = {
					NOT = { is_planet_class = pc_giga_frameworld }
				}
				set_planet_size = 20
			}
		}
		set_country_flag = acot_phanon_tech_stage_two_enabled
		if = {
			limit = { has_global_flag = has_aot_mod }
			phanon_type_civ_tech_gift = yes
			phanon_species_traits_tech_gift_card = yes
		}
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = acot_phanon_event_chain
				counter = phanon_vault_stage
				amount = 1
			}
		}
	}
}

# Vault Invasion Victory - Phase Three
country_event = {
	id = acot_pmc.1400
	title = "acot_pmc.1400.title"
	desc = {
		text = acot_pmc.1400.desc.a
	}
	show_sound = event_ground_battle
	picture = GFX_evt_sentry_guns
	is_triggered_only = yes
	trigger = {
		is_playable_country = yes
		fromfrom = {
			OR = {
				is_planet_class = pc_acot_pmc_vault
				AND = {
					is_planet_class = pc_giga_frameworld
					root = {
						giga_has_frameworld_origin = yes
						has_country_flag = has_vault_within_borders
					}
				}
			}
			has_planet_flag = ongoing_vault_infiltration
		}
		NOT = {
			has_country_flag = acot_phanon_tech_stage_three_enabled
		}
	}
	immediate = {
		if = {
			limit = { has_global_flag = has_aot_mod }
			event_target:phanon_protecc_base_country = {
				IF = {
					limit = {
						has_modifier = acot_vault_exposed_debuff_50
					}
					remove_modifier = acot_vault_exposed_debuff_50
				}
			}
		} else = {
			event_target:phanon_base_country = {
				IF = {
					limit = {
						has_modifier = acot_vault_exposed_debuff_50
					}
					remove_modifier = acot_vault_exposed_debuff_50
				}
			}
		}		
		FROMFROM = {
			remove_planet_flag = ongoing_vault_infiltration
			set_planet_flag = acot_vault_floor_three_cleared
			add_planet_devastation = -100
			add_modifier = {
				modifier = acot_modifier_vault_delay
				days = @vault_delay
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = acot_phanon_tech_enabled
				}
			}
			set_country_flag = acot_phanon_tech_enabled
		}
	}
	option = {
		name = acot_pmc.1400.a
		FROMFROM = {
			if = {
				limit = {
					NOT = { is_planet_class = pc_giga_frameworld }
				}
				set_planet_size = 25
			}
		}
		if = {
			limit = { has_global_flag = has_aot_mod }
			phanon_type_ship_tech_gift = yes
		}
		set_country_flag = acot_phanon_tech_stage_three_enabled
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = acot_phanon_event_chain
				counter = phanon_vault_stage
				amount = 1
			}
		}
	}
}

# Vault Invasion Victory - Phase Four
country_event = {
	id = acot_pmc.1500
	title = "acot_pmc.1500.title"
	desc = {
		text = acot_pmc.1500.desc.a
	}
	show_sound = event_ground_battle
	picture = GFX_evt_sentry_guns
	is_triggered_only = yes
	trigger = {
		is_playable_country = yes
		fromfrom = {
			OR = {
				is_planet_class = pc_acot_pmc_vault
				AND = {
					is_planet_class = pc_giga_frameworld
					root = {
						giga_has_frameworld_origin = yes
						has_country_flag = has_vault_within_borders
					}
				}
			}
			has_planet_flag = ongoing_vault_infiltration
		}
		NOT = {
			has_country_flag = acot_phanon_tech_stage_four_enabled
		}
	}
	immediate = {
		FROMFROM = {
			remove_planet_flag = ongoing_vault_infiltration
			set_planet_flag = acot_vault_floor_four_cleared
			add_planet_devastation = -100
			add_modifier = {
				modifier = acot_modifier_vault_delay
				days = @vault_delay
			}
		}
		IF = {
			limit = {
				NOT = {
					has_country_flag = acot_phanon_tech_enabled
				}
			}
			set_country_flag = acot_phanon_tech_enabled
		}
		if = { # remove vault after all is done if using my modlist
			limit = { has_global_flag = anz_ee_modlist }
			every_galaxy_planet = {
				limit = {
					is_planet_class = pc_acot_pmc_vault
					has_planet_flag = under_assault_by@root
				}
				destroy_colony = yes
				remove_planet = yes
			}
		}
	}
	option = {
		name = acot_pmc.1500.a
		FROMFROM = {
			if = {
				limit = {
					NOT = { is_planet_class = pc_giga_frameworld }
				}
				set_planet_size = 30
			}
		}
		if = {
			limit = { has_global_flag = has_aot_mod }
			phanon_type_a_tech_gift = yes
			phanon_type_civ_tech_gift = yes
			phanon_type_ship_tech_gift = yes
			phanon_type_b_tech_gift = yes
			phanon_species_traits_tech_gift_card = yes
		}
		set_country_flag = acot_phanon_tech_stage_four_enabled
		hidden_effect = {
			add_event_chain_counter = {
				event_chain = acot_phanon_event_chain
				counter = phanon_vault_stage
				amount = 1
			}
			country_event = {
				id = acot_pmc.16 days = 5
			}
		}
	}
}

# Vault Abandonded Exception
# Phanon Creates New Starbase - Created From Planet Lacking Owner or System unoccupied
planet_event = {
	id = acot_pmc.9901
	hide_window = yes
	
	trigger = {	
		is_planet_class = pc_acot_pmc_vault
		NOT = { has_planet_flag = under_assault }
		solar_system = {
			has_star_flag = phanon_base_system
		}
		OR = {
			NOT = {
				exists = owner
			}
			solar_system = {
				NOT = {
					exists = owner
				}
			}
		}
	}

	mean_time_to_happen = {
		months = 2
	}
	
	immediate = {
		solar_system = {
			create_starbase = {
				size = "acot_star_commander"
				owner = event_target:phanon_base_country
				effect = {
				}
			}
		}
		remove_planet_flag = ongoing_vault_infiltration
		add_planet_devastation = -100
		every_owned_pop = {
			kill_pop = yes
		}
		every_planet_army = {
			limit = {
				owner = {
					NOT = {
						is_same_value = from
					}
				}
			}
			remove_army = yes
		}
		destroy_colony = yes
		remove_all_districts = yes
		add_district = district_acot_phanon_command
		add_district = district_acot_phanon_command
		add_district = district_acot_phanon_command
		add_district = district_acot_phanon_data
		add_district = district_acot_phanon_vault
		remove_all_buildings = yes
		add_building = building_phanon_tower
		add_building = building_phanon_lab
		add_building = building_phanon_vault
		add_building = building_phanon_vault
		add_building = building_phanon_plant
		add_building = building_phanon_plant
		add_building = building_phanon_plant
		set_owner = event_target:phanon_base_country
		set_controller = event_target:phanon_base_country
		while = {
			count = 5
			create_pop = {
				species = event_target:phanon_species
			}
		}
		while = {
			count = 40
			create_army = {
				owner = event_target:phanon_base_country
				species = event_target:phanon_species
				type = "acot_phanon_defense_soldier"
				land_army = yes
			}
		}
		while = {
			count = 20
			create_army = {
				owner = event_target:phanon_base_country
				species = event_target:phanon_species
				type = "acot_phanon_defense_elite"
				land_army = yes
			}
		}
		while = {
			count = 1
			create_army = {
				owner = event_target:phanon_base_country
				species = event_target:phanon_species
				type = "acot_phanon_defense_commander"
				land_army = yes
			}
		}
		while = {
			count = 20
			create_army = {
				owner = event_target:phanon_base_country
				species = event_target:phanon_species
				type = "acot_phanon_defense_droid_shielder"
				land_army = yes
			}
		}
	}
}

# Custom event to stop devastation on the vault upon invasion
planet_event = {
	id = acot_pmc.9999
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		is_planet_class = pc_acot_pmc_vault
	}

	immediate = {
		add_planet_devastation = -100

		# loop event until combat ends
		if = {
			limit = { has_ground_combat = yes }
			planet_event = {
				id = acot_pmc.9999
				days = 4
			}
		}
	}
}